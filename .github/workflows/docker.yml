name: docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths:
    - '*.Dockerfile'
    - '.github/workflows/docker.yml'
  pull_request:
    branches: [ master ]
    paths:
    - '*.Dockerfile'
    - '.github/workflows/docker.yml'

jobs:
  build:
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        type: [base, php]
        include:
          - type: base
            image: cloudstudio_selfhosting
            dockerFile: base.Dockerfile
          - type: php
            image: cloudstudio_selfhosting_php
            dockerFile: php.Dockerfile
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      IMAGE_OWNER: annangela

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry docker.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: annangela
          password: ${{ secrets.DOCKER_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata for ${{ env.IMAGE_OWNER }}/${{ matrix.image }}
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: docker.io/${{ env.IMAGE_OWNER }}/${{ matrix.image }}
          tags: |
            type=raw,value=latest
            type=sha,format=long,prefix={{date 'Y-MM-DDTHH-mm-ss[Z]'}}_

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build from ${{ matrix.dockerFile }} and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.dockerFile }}
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          ache-to: type=gha,mode=max
